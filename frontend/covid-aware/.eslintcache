[{"/Users/kaichen/repos/WebStormProjects/covid-aware/frontend/covid-aware/src/index.js":"1","/Users/kaichen/repos/WebStormProjects/covid-aware/frontend/covid-aware/src/reportWebVitals.js":"2","/Users/kaichen/repos/WebStormProjects/covid-aware/frontend/covid-aware/src/App.js":"3","/Users/kaichen/repos/WebStormProjects/covid-aware/frontend/covid-aware/src/components/Topbar.jsx":"4","/Users/kaichen/repos/WebStormProjects/covid-aware/frontend/covid-aware/src/components/Sidebar.jsx":"5","/Users/kaichen/repos/WebStormProjects/covid-aware/frontend/covid-aware/src/success.js":"6"},{"size":501,"mtime":1610253742264,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1610229360654,"results":"9","hashOfConfig":"8"},{"size":4968,"mtime":1610254242584,"results":"10","hashOfConfig":"8"},{"size":971,"mtime":1610253742264,"results":"11","hashOfConfig":"8"},{"size":1884,"mtime":1610254212174,"results":"12","hashOfConfig":"8"},{"size":6021,"mtime":1610254212233,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b1a7ey",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"23"},"/Users/kaichen/repos/WebStormProjects/covid-aware/frontend/covid-aware/src/index.js",[],"/Users/kaichen/repos/WebStormProjects/covid-aware/frontend/covid-aware/src/reportWebVitals.js",[],"/Users/kaichen/repos/WebStormProjects/covid-aware/frontend/covid-aware/src/App.js",["30","31","32","33"],"/Users/kaichen/repos/WebStormProjects/covid-aware/frontend/covid-aware/src/components/Topbar.jsx",["34"],"import clsx from 'clsx';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nexport default (props) => {\n    return (<AppBar\n        position=\"fixed\"\n        className={clsx(props.classes.appBar, {\n            [props.classes.appBarShift]: props.open,\n        })}\n            >\n        <Toolbar>\n            <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={props.handleDrawerOpen}\n                edge=\"start\"\n                className={clsx(props.classes.menuButton, props.open && props.classes.hide)}\n            >\n                <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n                COVID Aware\n            </Typography>\n        </Toolbar>\n    </AppBar>)\n}\n",["35","36"],"/Users/kaichen/repos/WebStormProjects/covid-aware/frontend/covid-aware/src/components/Sidebar.jsx",["37"],"import Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ScannerIcon from '@material-ui/icons/Scanner';\nimport CameraIcon from '@material-ui/icons/Camera';\nimport InfoIcon from '@material-ui/icons/Info';\n\nexport default (props) => {\n    return (<Drawer\n        className={props.classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={props.open}\n        classes={{\n            paper: props.classes.drawerPaper,\n        }}\n            >\n        <div className={props.classes.drawerHeader}>\n            <IconButton onClick={props.handleDrawerClose}>\n                {props.theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n            </IconButton>\n        </div>\n        <Divider />\n        <List>\n            <ListItem button key=\"Scan\">\n                <ListItemIcon>\n                    <CameraIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Scan\" />\n            </ListItem>\n            <ListItem button key=\"My Scans\">\n                <ListItemIcon>\n                    <ScannerIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"My Scans\" />\n            </ListItem>\n            <ListItem button key=\"About\">\n                <ListItemIcon>\n                    <InfoIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"About\" />\n            </ListItem>\n        </List>\n        <Divider />\n    </Drawer>)\n};\n","/Users/kaichen/repos/WebStormProjects/covid-aware/frontend/covid-aware/src/success.js",["38","39","40","41","42"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport ScannerIcon from '@material-ui/icons/Scanner';\nimport CameraIcon from '@material-ui/icons/Camera';\nimport InfoIcon from '@material-ui/icons/Info';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nexport default function Success() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n              [classes.appBarShift]: open,\n            })}\n        >\n          <Toolbar>\n            <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={handleDrawerOpen}\n                edge=\"start\"\n                className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              COVID Aware\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n            className={classes.drawer}\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={open}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            <ListItem button key=\"Scan\">\n              <ListItemIcon>\n                <CameraIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Scan\" />\n            </ListItem>\n            <ListItem button key=\"My Scans\">\n              <ListItemIcon>\n                <ScannerIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"My Scans\" />\n            </ListItem>\n            <ListItem button key=\"About\">\n              <ListItemIcon>\n                <InfoIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"About\" />\n            </ListItem>\n          </List>\n          <Divider />\n        </Drawer>\n        <main\n            className={clsx(classes.content, {\n              [classes.contentShift]: open,\n            })}\n        >\n          <div className={classes.drawerHeader} />\n          <Typography paragraph>\n           Success\n          </Typography>\n          <Typography paragraph>\n            Consequat mauris nunc congue nisi vitae suscipit. Fringilla est ullamcorper eget nulla\n            facilisi etiam dignissim diam. Pulvinar elementum integer enim neque volutpat ac\n            tincidunt. Ornare suspendisse sed nisi lacus sed viverra tellus. Purus sit amet volutpat\n            consequat mauris. Elementum eu facilisis sed odio morbi. Euismod lacinia at quis risus sed\n            vulputate odio. Morbi tincidunt ornare massa eget egestas purus viverra accumsan in. In\n            hendrerit gravida rutrum quisque non tellus orci ac. Pellentesque nec nam aliquam sem et\n            tortor. Habitant morbi tristique senectus et. Adipiscing elit duis tristique sollicitudin\n            nibh sit. Ornare aenean euismod elementum nisi quis eleifend. Commodo viverra maecenas\n            accumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam ultrices sagittis orci a.\n          </Typography>\n        </main>\n      </div>\n  );\n}",{"ruleId":"43","severity":1,"message":"44","line":4,"column":8,"nodeType":"45","messageId":"46","endLine":4,"endColumn":17},{"ruleId":"43","severity":1,"message":"47","line":21,"column":3,"nodeType":"45","messageId":"46","endLine":21,"endColumn":7},{"ruleId":"43","severity":1,"message":"48","line":54,"column":10,"nodeType":"45","messageId":"46","endLine":54,"endColumn":15},{"ruleId":"49","severity":1,"message":"50","line":171,"column":25,"nodeType":"51","endLine":173,"endColumn":27},{"ruleId":"52","severity":1,"message":"53","line":9,"column":1,"nodeType":"54","endLine":31,"endColumn":2},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"52","severity":1,"message":"53","line":14,"column":1,"nodeType":"54","endLine":52,"endColumn":3},{"ruleId":"43","severity":1,"message":"59","line":18,"column":8,"nodeType":"45","messageId":"46","endLine":18,"endColumn":17},{"ruleId":"43","severity":1,"message":"60","line":23,"column":22,"nodeType":"45","messageId":"46","endLine":23,"endColumn":28},{"ruleId":"43","severity":1,"message":"61","line":24,"column":5,"nodeType":"45","messageId":"46","endLine":24,"endColumn":11},{"ruleId":"43","severity":1,"message":"62","line":25,"column":5,"nodeType":"45","messageId":"46","endLine":25,"endColumn":10},{"ruleId":"43","severity":1,"message":"47","line":26,"column":5,"nodeType":"45","messageId":"46","endLine":26,"endColumn":9},"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Users' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["63"],"no-negated-in-lhs",["64"],"'InboxIcon' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","no-global-assign","no-unsafe-negation"]